{"version":3,"sources":["Components/Header.js","Components/List.js","App.js","index.js"],"names":["Header","react_default","a","createElement","List","props","uniqId","uuid","_useState","useState","_useState2","Object","slicedToArray","TotalMoney","setTotalMoney","_useState3","_useState4","RestMoney","setRestMoney","_useState5","_useState6","toDo","settoDo","_useState7","_useState8","newTask","setnewTask","_useState9","_useState10","newNum","setnewNum","className","length","map","task","index","Fragment","key","id","status","title","money","ArrowDropUp_default","ArrowDropDown_default","onClick","newTasks","toConsumableArray","splice","deleteTask","DeleteSweep_default","action","type","onSubmit","event","preventDefault","myTodo","Status","parseInt","concat","alert","addTask","value","onChange","e","target","placeholder","name","AddCircle_default","App","Components_Header","Components_List","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.42af7e0b.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.css';\r\nfunction Header\r\n() {\r\n  return (\r\n    <h2>\r\n        Expense tracker\r\n    </h2>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport './List.css';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { useState } from 'react';\r\nimport DeleteSweepIcon from '@mui/icons-material/DeleteSweep';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nfunction List(props) {\r\n    const uniqId = uuid();\r\n    const [TotalMoney, setTotalMoney] = useState(0)\r\n    const [RestMoney, setRestMoney] = useState(0)\r\n    const [toDo, settoDo] = useState([]);\r\n\r\n    // temp state\r\n    const [newTask, setnewTask] = useState('');\r\n    const [newNum, setnewNum] = useState('');\r\n\r\n    // Add function\r\n    const addTask = (newTask, newNum) => {\r\n        const myTodo = {\r\n            id: uniqId,\r\n            title: newTask,\r\n            money: newNum,\r\n            Status: false\r\n        }\r\n\r\n        if (parseInt(RestMoney)-parseInt(newNum) >= 0) {\r\n            settoDo([...toDo, myTodo]);\r\n            setnewTask('');\r\n            setnewNum('');\r\n        }\r\n        if (parseInt(RestMoney)-parseInt(newNum) < 0) {\r\n            alert(\"Your Total Money is Finished\");\r\n            setTotalMoney(parseInt(0));\r\n            setRestMoney(parseInt(0));\r\n            settoDo([]);\r\n            setnewTask('');\r\n            setnewNum('');\r\n        }\r\n        else if (newNum < 0) {\r\n            setTotalMoney(parseInt(TotalMoney) - parseInt(newNum));\r\n            setRestMoney(parseInt(RestMoney) - parseInt(newNum));\r\n        }\r\n        else\r\n            setRestMoney(parseInt(RestMoney) - parseInt(newNum))\r\n    }\r\n    // Delete function\r\n    const deleteTask = (index) => {\r\n        const newTasks = [...toDo];\r\n        newTasks.splice(index, 1);\r\n        settoDo(newTasks);\r\n    }\r\n    return (\r\n        <div className='listMoney'>\r\n            <div className=\"card\">\r\n                <div className=\"text tM\">\r\n                    <span>Total Money</span>\r\n                    <span>\r\n                        ${TotalMoney}\r\n                    </span>\r\n                </div>\r\n                <div className=\"text rM\">\r\n                    <span>\r\n                        Rest Money\r\n                    </span>\r\n                    <span>\r\n                        ${RestMoney}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n            {/* display list */}\r\n            {toDo && toDo.length ? '' : 'Firstly Add Money putting number with - sign'}\r\n            {toDo && toDo.map((task, index) => {\r\n                return (\r\n                    <React.Fragment key={task.id}>\r\n                        <div className=\"col taskBag\">\r\n                            <div className={task.status ? 'itemList' : ''} >\r\n                                <span className=\"taskNumber\"> {index + 1} </span>\r\n                                <span className=\"taskText\"> {task.title} </span>\r\n                                <span className=\"taskNum\"> {task.money}INR </span>\r\n                                <div className='delIcon' >\r\n                                    <div className={task.money > 0 ? 'gain' : 'loss'}>{task.money < 0 ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}</div>\r\n                                    <button onClick={() => { deleteTask(index) }} >\r\n                                        <DeleteSweepIcon />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </React.Fragment>\r\n                )\r\n            })\r\n            }\r\n            <hr className='hr2' />\r\n            {/* Form for input data */}\r\n            <form action=\"\" type=\"submit\" onSubmit={(event) => { event.preventDefault(); addTask(newTask, newNum) }}>\r\n                <input type=\"text\" value={newTask} onChange={(e) => { setnewTask(e.target.value) }} placeholder='Write spend Amount reason' className='textWala' />\r\n                <input type=\"number\" value={newNum} onChange={(e) => { setnewNum(e.target.value) }} name=\"number\" id=\"\" placeholder='$...' className='NumWala' />\r\n                <button type='submit'> <AddCircleIcon /> </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List","import React from 'react'\nimport './App.css'; \nimport Header from './Components/Header'\nimport List from './Components/List';\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <div className='Container'>\n\n        <div className=\"list\">\n          <List  />\n        </div>\n       <span className=\"lastPart\">\n        Thanks for Visiting!!!!\n       </span>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}